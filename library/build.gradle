apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.github.li-xiaojun:EasyAdapter:1.2.8'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.3.1"
}

task generateSourcesJar(type: Jar) {
    group = 'jar'
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task generateJavadoc(type: Jar, dependsOn: javadoc) {
    group = 'jar'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives generateJavadoc
    archives generateSourcesJar
}

def PROJECT_NAME = 'library'
def PROJECT_VERSION = '2.9.18'
def GROUP_ID = 'bas.droid'
def ARTIFACT_ID = 'XPopup'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def NEXUS_USER = properties.getProperty('NEXUS_USER')
def NEXUS_PWD = properties.getProperty('NEXUS_PWD')
def NEXUS_URL = properties.getProperty('NEXUS_URL')
def NEXUS_URL_SNAPSHOT  = properties.getProperty('NEXUS_URL_SNAPSHOT')

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = GROUP_ID
                artifactId = ARTIFACT_ID
                version = PROJECT_VERSION
            }
        }

        repositories {
            //仓库配置
            maven {
                //对于非 https 的仓库地址，需要设置 allowInsecureProtocol true
                allowInsecureProtocol true
                name = PROJECT_NAME //可选
                url = PROJECT_VERSION.endsWith('SNAPSHOT') ? NEXUS_URL_SNAPSHOT : NEXUS_URL
                credentials {
                    username = NEXUS_USER
                    password = NEXUS_PWD
                }
            }
        }
    }
}